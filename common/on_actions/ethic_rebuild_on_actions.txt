# Triggers when the game starts
on_game_start = {
	events = {
		starter_tech.1
		ethic_civic_classic_flag.1
		ethic_civic_classic_flag.2 #Both effectively do the same thing. Unsure why both need to exist
	}
}

# Called when an election starts
# scope: country
on_election_started = {
	events = {
		#paragon.500 # Flags Leaders that are on the Council. #Modder Note, this is giving us an idea of when the vanilla scope happens
		EaC_civic_mechanic_events.100
	}
}

# Called when an election ends
# scope: country
on_election_ended = {
	events = {
		#paragon.501 # Clean up Flags about being on Council at Election start. #Modder Note, this is giving us an idea of when the vanilla scope happens
		#Modder Note, Election background settings are made after paragon.501
		EaC_civic_mechanic_events.103
	}
}

# Executed when a new heir is appointed
# This = Heir
on_new_heir = {
	events = {
		#leader.200		# New Heir appointed, grant traits and select class. #Modder Note, this is giving us an idea of when the vanilla scope happens
	}
}

# Executed when an heir is promoted to ruler
# This = Heir
on_heir_promoted_to_ruler = {
	events = {
		EaC_civic_mechanic_events.102
	}
}

# Executed as a leader has died
# This = Country
# From = Leader
on_leader_death = {
	events = {
		#Modder Note, this is giving us an idea of when the vanilla scope happens
		#pretender.1
		#akx.9330
		#marauder.70
		#marauder.711
		#paragon.590			# Randomize if leader retires or dies by default
		#paragon.3904
		#paragon.2
		#paragon.5900
		#paragon.3906
		#distar.168			# Remove Event Node Traits
		#paragon.600			# Generate new nodes for a gestalt empire if a node dies.
		#astral_rift.695		# Death of the Tower Rift Scientist Leader
		#astral_planes.3119	# Formless Leader death
		#cyber.1521 			# RulerChip adding variables event
		#synth.1555          # Synth Imperial physical swap
		#cybernetics.5095	# No exploiting Tactical Algorithms
		
		EaC_civic_mechanic_events.101 #Allows imperial authority's ruler to pass skill level to the heir
	}
}

# Executed as a leader has been fired
# This = Country
# From = Leader
on_leader_fired = {
	events = {
		#Modder Note, this is giving us an idea of when the vanilla scope happens
		#marauder.70
		#paragon.3904
		#paragon.2
		#paragon.290
		#paragon.3906
		#distar.168 # Remove Event Node Traits
		
		EaC_civic_mechanic_events.101 #Allows imperial authority's ruler to pass skill level to the heir
	}
}

on_uplift_completion = {
	events = {
		unity_patrons.1
	}
}

on_blocker_cleared = {
	events = {
		# ethic_rebuild_clear_blocker.1
	}
}

on_pop_purged = {
	events = {
		slave_race.1
	}
}



# This = owner of fleet 1 (combatant)
# From = owner of fleet 2 (destroyed)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_fleet_destroyed_perp = {
	events = {
		#glorious_fleet.0
	}
}

# This = owner of fleet 1 (destroyed)
# From = owner of fleet 2 (combatant)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_fleet_destroyed_victim = {
	events = {
        #glorious_fleet.1
	}
}

# Scope = planet_event
# This = planet scope
# From = uplifted species (pre-modification)
on_uplift_completion = {
	events = {
		unity_patrons.1
	}
}

#on_building_demolished = {
#	events = {
#		# get 30 minerals back
#		ethic_rebuild_minerals_back.1
#	}
#}


#on_purge_complete = {
#	events = {
#		purity_chosen.1
#	}
#}




#on_the_start_button_press = {
#	events = {
#		starter_event.1
#
#	}
#}


#on_daily_bombardment = {
#	events = {
#		pds_active.1
#	}
#}
