namespace = EaC_civic_mechanic_events.1


#Modder Note:
#This file is where civic mechanic events are placed. Please only use EaC_civic_mechanic_events namespace, as adding multiple namespaces is very laggy.

#0.100 - Memory Vault Civic - Gives random leader trait to elected council leader. Can pay influence to make it a specific destiny trait.
country_event = {
	id = ancrel.10005
	title = "ancrel.10004.name"
	desc = "ancrel.10004.skydome"
	picture = GFX_evt_ancient_records

	is_triggered_only = yespicture = GFX_evt_astral_rift_library
	show_sound = evn_ove_grand_speech
	hide_window = no
	is_triggered_only = yes
	fire_only_once = no

	location = Capital
	
	trigger = { }
	option = {
		name = "EXCELLENT"

		hidden_effect = {
			owner = {
				change_variable = { which = skydome_build_count value = 1 }
				change_variable = { which = skydome_upgrade_count value = 1 }
				set_country_flag = skydome_can_build
			}
		}
	}
}

event = {
	id = EaC_civic_mechanic_events.101
	title = EaC_civic_mechanic_events.101.name
	#Displays proper description based on authority and leader type
	desc = {
		trigger = {
			ruler = { leader_class = official }
			OR = { 
				has_authority = auth_direct_democratic
				has_authority = auth_democratic
			}
		}
		text = "EaC_civic_mechanic_events.101.desc.official_elected"
	}
	desc = {
		trigger = {
			ruler = { leader_class = official }
			has_authority = auth_oligarchic
		}
		text = "EaC_civic_mechanic_events.101.desc.official_elected_20"
	}
	desc = {
		trigger = {
			ruler = { leader_class = official } 
			has_authority = auth_dictatorial
		}
		text = "EaC_civic_mechanic_events.101.desc.official_dictator"
	}
	desc = {
		trigger = {
			ruler = { leader_class = official } 
			has_authority = auth_imperial
		}
		text = "EaC_civic_mechanic_events.101.desc.official_imperial"
	}
	desc = {
		trigger = {
			ruler = { leader_class = official } 
			has_authority = auth_hive_mind
		}
		text = "EaC_civic_mechanic_events.101.desc.official_hive"
	}
	desc = {
		trigger = {
			ruler = { leader_class = official } 
			has_authority = auth_corporate
		}
		text = "EaC_civic_mechanic_events.101.desc.official_megacorp"
	}
	desc = {
		trigger = {
			ruler = { leader_class = official } 
			has_authority = auth_machine_intelligence
		}
		text = "EaC_civic_mechanic_events.101.desc.official_machine"
	}
	desc = {
		trigger = {
			ruler = { leader_class = commander }
			OR = { 
				has_authority = auth_direct_democratic
				has_authority = auth_democratic
			}
		}
		text = "EaC_civic_mechanic_events.101.desc.commander_elected"
	}
	desc = {
		trigger = {
			ruler = { leader_class = commander }
			has_authority = auth_oligarchic
		}
		text = "EaC_civic_mechanic_events.101.desc.commander_elected_20"
	}
	desc = {
		trigger = {
			ruler = { leader_class = commander } 
			has_authority = auth_dictatorial
		}
		text = "EaC_civic_mechanic_events.101.desc.commander_dictator"
	}
	desc = {
		trigger = {
			ruler = { leader_class = commander } 
			has_authority = auth_imperial
		}
		text = "EaC_civic_mechanic_events.101.desc.commander_imperial"
	}
	desc = {
		trigger = {
			ruler = { leader_class = commander } 
			has_authority = auth_hive_mind
		}
		text = "EaC_civic_mechanic_events.101.desc.commander_hive"
	}
	desc = {
		trigger = {
			ruler = { leader_class = commander } 
			has_authority = auth_corporate
		}
		text = "EaC_civic_mechanic_events.101.desc.commander_megacorp"
	}
	desc = {
		trigger = {
			ruler = { leader_class = commander } 
			has_authority = auth_machine_intelligence
		}
		text = "EaC_civic_mechanic_events.101.desc.commander_machine"
	}
	desc = {
		trigger = {
			ruler = { leader_class = scientist }
			OR = { 
				has_authority = auth_direct_democratic
				has_authority = auth_democratic
			}
		}
		text = "EaC_civic_mechanic_events.101.desc.scientist_elected"
	}
	desc = {
		trigger = {
			ruler = { leader_class = scientist }
			has_authority = auth_oligarchic
		}
		text = "EaC_civic_mechanic_events.101.desc.scientist_elected_20"
	}
	desc = {
		trigger = {
			ruler = { leader_class = scientist } 
			has_authority = auth_dictatorial
		}
		text = "EaC_civic_mechanic_events.101.desc.scientist_dictator"
	}
	desc = {
		trigger = {
			ruler = { leader_class = scientist } 
			has_authority = auth_imperial
		}
		text = "EaC_civic_mechanic_events.101.desc.scientist_imperial"
	}
	desc = {
		trigger = {
			ruler = { leader_class = scientist } 
			has_authority = auth_hive_mind
		}
		text = "EaC_civic_mechanic_events.101.desc.scientist_hive"
	}
	desc = {
		trigger = {
			ruler = { leader_class = scientist } 
			has_authority = auth_corporate
		}
		text = "EaC_civic_mechanic_events.101.desc.scientist_megacorp"
	}
	desc = {
		trigger = {
			ruler = { leader_class = scientist } 
			has_authority = auth_machine_intelligence
		}
		text = "EaC_civic_mechanic_events.101.desc.scientist_machine"
	}
	desc = {
		trigger = {
			
		}
		text = "EaC_civic_mechanic_events.101.desc.other"
	}
	picture = GFX_evt_astral_rift_library
	show_sound = evn_ove_grand_speech
	hide_window = no
	is_triggered_only = yes
	fire_only_once = no

	location = Capital
	
	trigger = { }
	
	
	#Displays proper options based on authority and leader type
	option = {
		trigger = {
			ruler = { leader_class = official }
			OR = { 
				has_authority = auth_direct_democratic
				has_authority = auth_democratic
			}
		}
		name = EaC_civic_mechanic_events.101.option.official_elected_a
		if = {
			limit = { has_level < 10 }
			add_skill = 1
		}
		else = {
			custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = official }
			has_authority = auth_oligarchic
		}
		name = EaC_civic_mechanic_events.101.option.official_elected_20_a
		if = {
			limit = { has_level < 10 }
			add_skill = 1
		}
		else = {
			custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = official } 
			has_authority = auth_dictatorial
		}
		name = EaC_civic_mechanic_events.101.option.official_dictator_a
		if = {
			limit = { has_level < 10 }
			add_skill = 1
		}
		else = {
			custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = official } 
			has_authority = auth_imperial
		}
		name = EaC_civic_mechanic_events.101.option.official_imperial_a
		if = {
			limit = { has_level < 10 }
			add_skill = 1
		}
		else = {
			custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = official } 
			has_authority = auth_hive_mind
		}
		name = EaC_civic_mechanic_events.101.option.official_hive_a
		if = {
			limit = { has_level < 10 }
			add_skill = 1
		}
		else = {
			custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = official } 
			has_authority = auth_corporate
		}
		name = EaC_civic_mechanic_events.101.option.official_megacorp_a
		if = {
			limit = { has_level < 10 }
			add_skill = 1
		}
		else = {
			custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = official } 
			has_authority = auth_machine_intelligence
		}
		name = EaC_civic_mechanic_events.101.option.official_machine_a
		if = {
			limit = { has_level < 10 }
			add_skill = 1
		}
		else = {
			custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = commander }
			OR = { 
				has_authority = auth_direct_democratic
				has_authority = auth_democratic
			}
		}
		name = EaC_civic_mechanic_events.101.option.commander_elected_a
		if = {
			limit = { has_level < 10 }
			add_skill = 1
		}
		else = {
			custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = commander }
			has_authority = auth_oligarchic
		}
		name = EaC_civic_mechanic_events.101.option.commander_elected_20_a
		if = {
			limit = { has_level < 10 }
			add_skill = 1
		}
		else = {
			custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = commander } 
			has_authority = auth_dictatorial
		}
		name = EaC_civic_mechanic_events.101.option.commander_dictator_a
		if = {
			limit = { has_level < 10 }
			add_skill = 1
		}
		else = {
			custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = commander } 
			has_authority = auth_imperial
		}
		name = EaC_civic_mechanic_events.101.option.commander_imperial_a
		if = {
			limit = { has_level < 10 }
			add_skill = 1
		}
		else = {
			custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = commander } 
			has_authority = auth_hive_mind
		}
		name = EaC_civic_mechanic_events.101.option.commander_hive_a
		if = {
			limit = { has_level < 10 }
			add_skill = 1
		}
		else = {
			custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = commander } 
			has_authority = auth_corporate
		}
		name = EaC_civic_mechanic_events.101.option.commander_megacorp_a
		if = {
			limit = { has_level < 10 }
			add_skill = 1
		}
		else = {
			custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = commander } 
			has_authority = auth_machine_intelligence
		}
		name = EaC_civic_mechanic_events.101.option.commander_machine_a
		if = {
			limit = { has_level < 10 }
			add_skill = 1
		}
		else = {
			custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = scientist }
			OR = { 
				has_authority = auth_direct_democratic
				has_authority = auth_democratic
			}
		}
		name = EaC_civic_mechanic_events.101.option.scientist_elected_a
		if = {
			limit = { has_level < 10 }
			add_skill = 1
		}
		else = {
			custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = scientist }
			has_authority = auth_oligarchic
		}
		name = EaC_civic_mechanic_events.101.option.scientist_elected_20_a
		if = {
			limit = { has_level < 10 }
			add_skill = 1
		}
		else = {
			custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = scientist } 
			has_authority = auth_dictatorial
		}
		name = EaC_civic_mechanic_events.101.option.scientist_dictator_a
		if = {
			limit = { has_level < 10 }
			add_skill = 1
		}
		else = {
			custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = scientist } 
			has_authority = auth_imperial
		}
		name = EaC_civic_mechanic_events.101.option.scientist_imperial_a
		if = {
			limit = { has_level < 10 }
			add_skill = 1
		}
		else = {
			custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = scientist } 
			has_authority = auth_hive_mind
		}
		name = EaC_civic_mechanic_events.101.option.scientist_hive_a
		if = {
			limit = { has_level < 10 }
			add_skill = 1
		}
		else = {
			custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = scientist } 
			has_authority = auth_corporate
		}
		name = EaC_civic_mechanic_events.101.option.scientist_megacorp_a
		if = {
			limit = { has_level < 10 }
			add_skill = 1
		}
		else = {
			custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = scientist } 
			has_authority = auth_machine_intelligence
		}
		name = EaC_civic_mechanic_events.101.option.scientist_machine_a
		if = {
			limit = { has_level < 10 }
			add_skill = 1
		}
		else = {
			custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
		}
	}
}