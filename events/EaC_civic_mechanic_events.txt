namespace = EaC_civic_mechanic_events


#Modder Note:
#This file is where civic mechanic events are placed. Please only use EaC_civic_mechanic_events namespace, as adding multiple namespaces is very laggy.

#0.100 - Memory Vault Civic - Gives random leader trait to elected council leader. Can pay influence to make it a specific destiny trait.
country_event = {
	id = EaC_civic_mechanic_events.100
	hide_window = yes
	is_triggered_only = yes
	fire_only_once = no
	
	trigger = { }
	immediate = {
		RULER = {
			if = {
				limit = { has_level = 1 }
				ROOT = {
					set_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 1
					}
				}
			}
			else_if = {
				limit = { has_level = 2 }
				ROOT = {
					set_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 2
					}
				}
			}
			else_if = {
				limit = { has_level = 3 }
				ROOT = {
					set_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 3
					}
				}
			}
			else_if = {
				limit = { has_level = 4 }
				ROOT = {
					set_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 4
					}
				}
			}
			else_if = {
				limit = { has_level = 5 }
				ROOT = {
					set_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 5
					}
				}
			}
			else_if = {
				limit = { has_level = 6 }
				ROOT = {
					set_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 6
					}
				}
			}
			else_if = {
				limit = { has_level = 7 }
				ROOT = {
					set_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 7
					}
				}
			}
			else_if = {
				limit = { has_level = 8 }
				ROOT = {
					set_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 8
					}
				}
			}
			else_if = {
				limit = { has_level = 9 }
				ROOT = {
					set_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 9
					}
				}
			}
			else = {
				ROOT = {
					set_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 10
					}
				}
			}
		}
	}
}

country_event = {
	id = EaC_civic_mechanic_events.101
	title = EaC_civic_mechanic_events.101.name
	#Displays proper description based on authority and leader type
	desc = {
		trigger = {
			ROOT = { RULER = { leader_class = official } }
			OR = { 
				has_authority = auth_direct_democratic
				has_authority = auth_democratic
			}
		}
		text = "EaC_civic_mechanic_events.101.desc.official_elected"
	}
	desc = {
		trigger = {
			ROOT = { RULER = { leader_class = official } }
			has_authority = auth_oligarchic
		}
		text = "EaC_civic_mechanic_events.101.desc.official_elected_20"
	}
	desc = {
		trigger = {
			is_memorialist_empire = no
			ROOT = { RULER = { leader_class = official } }
			has_authority = auth_dictatorial
		}
		text = "EaC_civic_mechanic_events.101.desc.official_dictator"
	}
	desc = {
		trigger = {
			is_memorialist_empire = yes
			ROOT = { RULER = { leader_class = official } }
			has_authority = auth_dictatorial
		}
		text = "EaC_civic_mechanic_events.101.desc.official_dictator_is_memorialist_empire"
	}
	desc = {
		trigger = {
			is_memorialist_empire = no
			ROOT = { RULER = { leader_class = official } }
			has_authority = auth_imperial
		}
		text = "EaC_civic_mechanic_events.101.desc.official_imperial"
	}
	desc = {
		trigger = {
			is_memorialist_empire = yes
			ROOT = { RULER = { leader_class = official } }
			has_authority = auth_imperial
		}
		text = "EaC_civic_mechanic_events.101.desc.official_imperial_is_memorialist_empire"
	}
	desc = {
		trigger = {
			ROOT = { RULER = { leader_class = official } } 
			has_authority = auth_hive_mind
		}
		text = "EaC_civic_mechanic_events.101.desc.official_hive_is_memorialist_empire"
	}
	desc = {
		trigger = {
			ROOT = { RULER = { leader_class = official } }
			has_authority = auth_corporate
		}
		text = "EaC_civic_mechanic_events.101.desc.official_megacorp"
	}
	desc = {
		trigger = {
			ROOT = { RULER = { leader_class = official } }
			has_authority = auth_machine_intelligence
		}
		text = "EaC_civic_mechanic_events.101.desc.official_machine_is_memorialist_empire"
	}
	desc = {
		trigger = {
			ROOT = { RULER = { leader_class = commander } }
			OR = { 
				has_authority = auth_direct_democratic
				has_authority = auth_democratic
			}
		}
		text = "EaC_civic_mechanic_events.101.desc.commander_elected"
	}
	desc = {
		trigger = {
			ROOT = { RULER = { leader_class = commander } }
			has_authority = auth_oligarchic
		}
		text = "EaC_civic_mechanic_events.101.desc.commander_elected_20"
	}
	desc = {
		trigger = {
			is_memorialist_empire = no
			ROOT = { RULER = { leader_class = commander } }
			has_authority = auth_dictatorial
		}
		text = "EaC_civic_mechanic_events.101.desc.commander_dictator"
	}
	desc = {
		trigger = {
			is_memorialist_empire = yes
			ROOT = { RULER = { leader_class = commander } }
			has_authority = auth_dictatorial
		}
		text = "EaC_civic_mechanic_events.101.desc.commander_dictator_is_memorialist_empire"
	}
	desc = {
		trigger = {
			is_memorialist_empire = no
			ROOT = { RULER = { leader_class = commander } }
			has_authority = auth_imperial
		}
		text = "EaC_civic_mechanic_events.101.desc.commander_imperial"
	}
	desc = {
		trigger = {
			is_memorialist_empire = yes
			ROOT = { RULER = { leader_class = commander } }
			has_authority = auth_imperial
		}
		text = "EaC_civic_mechanic_events.101.desc.commander_imperial_is_memorialist_empire"
	}
	desc = {
		trigger = {
			ROOT = { RULER = { leader_class = commander } }
			has_authority = auth_hive_mind
		}
		text = "EaC_civic_mechanic_events.101.desc.commander_hive_is_memorialist_empire"
	}
	desc = {
		trigger = {
			ROOT = { RULER = { leader_class = commander } }
			has_authority = auth_corporate
		}
		text = "EaC_civic_mechanic_events.101.desc.commander_megacorp"
	}
	desc = {
		trigger = {
			ROOT = { RULER = { leader_class = commander } }
			has_authority = auth_machine_intelligence
		}
		text = "EaC_civic_mechanic_events.101.desc.commander_machine_is_memorialist_empire"
	}
	desc = {
		trigger = {
			ROOT = { RULER = { leader_class = scientist } }
			OR = { 
				has_authority = auth_direct_democratic
				has_authority = auth_democratic
			}
		}
		text = "EaC_civic_mechanic_events.101.desc.scientist_elected"
	}
	desc = {
		trigger = {
			ROOT = { RULER = { leader_class = scientist } }
			has_authority = auth_oligarchic
		}
		text = "EaC_civic_mechanic_events.101.desc.scientist_elected_20"
	}
	desc = {
		trigger = {
			is_memorialist_empire = no
			ROOT = { RULER = { leader_class = scientist } }
			has_authority = auth_dictatorial
		}
		text = "EaC_civic_mechanic_events.101.desc.scientist_dictator"
	}
	desc = {
		trigger = {
			is_memorialist_empire = yes
			ROOT = { RULER = { leader_class = scientist } }
			has_authority = auth_dictatorial
		}
		text = "EaC_civic_mechanic_events.101.desc.scientist_dictator_is_memorialist_empire"
	}
	desc = {
		trigger = {
			is_memorialist_empire = no
			ROOT = { RULER = { leader_class = scientist } }
			has_authority = auth_imperial
		}
		text = "EaC_civic_mechanic_events.101.desc.scientist_imperial"
	}
	desc = {
		trigger = {
			is_memorialist_empire = yes
			ROOT = { RULER = { leader_class = scientist } }
			has_authority = auth_imperial
		}
		text = "EaC_civic_mechanic_events.101.desc.scientist_imperial_is_memorialist_empire"
	}
	desc = {
		trigger = {
			ROOT = { RULER = { leader_class = scientist } }
			has_authority = auth_hive_mind
		}
		text = "EaC_civic_mechanic_events.101.desc.scientist_hive_is_memorialist_empire"
	}
	desc = {
		trigger = {
			ROOT = { RULER = { leader_class = scientist } }
			has_authority = auth_corporate
		}
		text = "EaC_civic_mechanic_events.101.desc.scientist_megacorp"
	}
	desc = {
		trigger = {
			ROOT = { RULER = { leader_class = scientist } }
			has_authority = auth_machine_intelligence
		}
		text = "EaC_civic_mechanic_events.101.desc.scientist_machine_is_memorialist_empire"
	}
	desc = {
		trigger = {
			NOT = { 
				has_authority = auth_direct_democratic
				has_authority = auth_democratic
				has_authority = auth_oligarchic
				has_authority = auth_dictatorial
				has_authority = auth_imperial
				has_authority = auth_hive_mind
				has_authority = auth_corporate
				has_authority = auth_machine_intelligence
			}
		}
		text = "EaC_civic_mechanic_events.101.desc.other"
	}
	picture = GFX_evt_astral_rift_library
	show_sound = evn_ove_grand_speech
	hide_window = no
	is_triggered_only = yes
	fire_only_once = no

	#location = Capital
	
	trigger = { }
	
	
	#Displays proper options based on authority and leader type
	option = {
		trigger = {
			ruler = { leader_class = official }
			OR = { 
				has_authority = auth_direct_democratic
				has_authority = auth_democratic
			}
		}
		name = EaC_civic_mechanic_events.101.option.official_elected_a
		RULER = { 
			if = {
				limit = { has_level < 10 }
				add_skill = 1
			}
			else = {
				custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
			}
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = official }
			has_authority = auth_oligarchic
		}
		name = EaC_civic_mechanic_events.101.option.official_elected_20_a
		RULER = { 
			if = {
				limit = { has_level < 10 }
				add_skill = 1
			}
			else = {
				custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
			}
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = official } 
			has_authority = auth_dictatorial
		}
		name = {
			trigger = {
				is_memorialist_empire = no
			}
			text = "EaC_civic_mechanic_events.101.option.official_dictator_a"
		}
		name = {
			trigger = {
				is_memorialist_empire = yes
			}
			text = "EaC_civic_mechanic_events.101.option.official_dictator_is_memorialist_empire_a"
		}
		RULER = {
			if = {
				limit = { is_memorialist_empire = no }
				if = {
					limit = { has_level < 10 }
					add_skill = 1
				}
				else = { 
					custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
				}
			}
			#Memoralist Civic Effects
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 1
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 1
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 2
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 2
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 3
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 3
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 4
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 4
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 5
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 5
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 6
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 6
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 7
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 7
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 8
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 8
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 9
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 9
			}
			else = {
				clear_variable = ruler_ancestor_level
				set_skill = 10
				custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
			}
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = official } 
			has_authority = auth_imperial
		}
		name = {
			trigger = {
				is_memorialist_empire = no
			}
			text = "EaC_civic_mechanic_events.101.option.official_imperial_a"
		}
		name = {
			trigger = {
				is_memorialist_empire = yes
			}
			text = "EaC_civic_mechanic_events.101.option.official_imperial_is_memorialist_empire_a"
		}
		RULER = {
			if = {
				limit = { is_memorialist_empire = no }
				if = {
					limit = { has_level < 10 }
					add_skill = 1
				}
				else = { 
					custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
				}
			}
			#Memoralist Civic Effects
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 1
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 1
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 2
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 2
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 3
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 3
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 4
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 4
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 5
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 5
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 6
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 6
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 7
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 7
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 8
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 8
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 9
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 9
			}
			else = {
				clear_variable = ruler_ancestor_level
				set_skill = 10
				custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
			}
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = official } 
			has_authority = auth_hive_mind
		}
		name = {
			trigger = {
				is_memorialist_empire = no
			}
			text = "EaC_civic_mechanic_events.101.option.official_hive_a"
		}
		name = {
			trigger = {
				is_memorialist_empire = yes
			}
			text = "EaC_civic_mechanic_events.101.option.official_hive_is_memorialist_empire_a"
		}
		RULER = { 
			if = {
				limit = { has_level < 10 }
				add_skill = 1
			}
			else = {
				custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
			}
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = official } 
			has_authority = auth_corporate
		}
		name = EaC_civic_mechanic_events.101.option.official_megacorp_a
		RULER = { 
			if = {
				limit = { has_level < 10 }
				add_skill = 1
			}
			else = {
				custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
			}
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = official } 
			has_authority = auth_machine_intelligence
		}
		name = {
			trigger = {
				is_memorialist_empire = no
			}
			text = "EaC_civic_mechanic_events.101.option.official_machine_a"
		}
		name = {
			trigger = {
				is_memorialist_empire = yes
			}
			text = "EaC_civic_mechanic_events.101.option.official_machine_is_memorialist_empire_a"
		}
		RULER = { 
			if = {
				limit = { has_level < 10 }
				add_skill = 1
			}
			else = {
				custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
			}
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = commander }
			OR = { 
				has_authority = auth_direct_democratic
				has_authority = auth_democratic
			}
		}
		name = EaC_civic_mechanic_events.101.option.commander_elected_a
		RULER = { 
			if = {
				limit = { has_level < 10 }
				add_skill = 1
			}
			else = {
				custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
			}
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = commander }
			has_authority = auth_oligarchic
		}
		name = EaC_civic_mechanic_events.101.option.commander_elected_20_a
		RULER = { 
			if = {
				limit = { has_level < 10 }
				add_skill = 1
			}
			else = {
				custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
			}
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = commander } 
			has_authority = auth_dictatorial
		}
		name = {
			trigger = {
				is_memorialist_empire = no
			}
			text = "EaC_civic_mechanic_events.101.option.commander_dictator_a"
		}
		name = {
			trigger = {
				is_memorialist_empire = yes
			}
			text = "EaC_civic_mechanic_events.101.option.commander_dictator_is_memorialist_empire_a"
		}
		RULER = {
			if = {
				limit = { is_memorialist_empire = no }
				if = {
					limit = { has_level < 10 }
					add_skill = 1
				}
				else = { 
					custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
				}
			}
			#Memoralist Civic Effects
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 1
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 1
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 2
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 2
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 3
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 3
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 4
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 4
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 5
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 5
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 6
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 6
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 7
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 7
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 8
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 8
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 9
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 9
			}
			else = {
				clear_variable = ruler_ancestor_level
				set_skill = 10
				custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
			}
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = commander } 
			has_authority = auth_imperial
		}
		name = {
			trigger = {
				is_memorialist_empire = no
			}
			text = "EaC_civic_mechanic_events.101.option.commander_imperial_a"
		}
		name = {
			trigger = {
				is_memorialist_empire = yes
			}
			text = "EaC_civic_mechanic_events.101.option.commander_imperial_is_memorialist_empire_a"
		}
		RULER = {
			if = {
				limit = { is_memorialist_empire = no }
				if = {
					limit = { has_level < 10 }
					add_skill = 1
				}
				else = { 
					custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
				}
			}
			#Memoralist Civic Effects
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 1
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 1
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 2
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 2
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 3
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 3
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 4
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 4
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 5
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 5
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 6
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 6
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 7
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 7
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 8
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 8
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 9
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 9
			}
			else = {
				clear_variable = ruler_ancestor_level
				set_skill = 10
				custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
			}
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = commander } 
			has_authority = auth_hive_mind
		}
		name = {
			trigger = {
				is_memorialist_empire = no
			}
			text = "EaC_civic_mechanic_events.101.option.commander_hive_a"
		}
		name = {
			trigger = {
				is_memorialist_empire = yes
			}
			text = "EaC_civic_mechanic_events.101.option.commander_hive_is_memorialist_empire_a"
		}
		RULER = { 
			if = {
				limit = { has_level < 10 }
				add_skill = 1
			}
			else = {
				custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
			}
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = commander } 
			has_authority = auth_corporate
		}
		name = EaC_civic_mechanic_events.101.option.commander_megacorp_a
		RULER = { 
			if = {
				limit = { has_level < 10 }
				add_skill = 1
			}
			else = {
				custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
			}
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = commander } 
			has_authority = auth_machine_intelligence
		}
		name = {
			trigger = {
				is_memorialist_empire = no
			}
			text = "EaC_civic_mechanic_events.101.option.commander_machine_a"
		}
		name = {
			trigger = {
				is_memorialist_empire = yes
			}
			text = "EaC_civic_mechanic_events.101.option.commander_machine_is_memorialist_empire_a"
		}
		RULER = { 
			if = {
				limit = { has_level < 10 }
				add_skill = 1
			}
			else = {
				custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
			}
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = scientist }
			OR = { 
				has_authority = auth_direct_democratic
				has_authority = auth_democratic
			}
		}
		name = EaC_civic_mechanic_events.101.option.scientist_elected_a
		RULER = { 
			if = {
				limit = { has_level < 10 }
				add_skill = 1
			}
			else = {
				custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
			}
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = scientist }
			has_authority = auth_oligarchic
		}
		name = EaC_civic_mechanic_events.101.option.scientist_elected_20_a
		RULER = { 
			if = {
				limit = { has_level < 10 }
				add_skill = 1
			}
			else = {
				custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
			}
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = scientist } 
			has_authority = auth_dictatorial
		}
		name = {
			trigger = {
				is_memorialist_empire = no
			}
			text = "EaC_civic_mechanic_events.101.option.scientist_dictator_a"
		}
		name = {
			trigger = {
				is_memorialist_empire = yes
			}
			text = "EaC_civic_mechanic_events.101.option.scientist_dictator_is_memorialist_empire_a"
		}
		RULER = {
			if = {
				limit = { is_memorialist_empire = no }
				if = {
					limit = { has_level < 10 }
					add_skill = 1
				}
				else = { 
					custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
				}
			}
			#Memoralist Civic Effects
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 1
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 1
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 2
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 2
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 3
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 3
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 4
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 4
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 5
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 5
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 6
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 6
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 7
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 7
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 8
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 8
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 9
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 9
			}
			else = {
				clear_variable = ruler_ancestor_level
				set_skill = 10
				custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
			}
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = scientist } 
			has_authority = auth_imperial
		}
		name = {
			trigger = {
				is_memorialist_empire = no
			}
			text = "EaC_civic_mechanic_events.101.option.scientist_imperial_a"
		}
		name = {
			trigger = {
				is_memorialist_empire = yes
			}
			text = "EaC_civic_mechanic_events.101.option.scientist_imperial_is_memorialist_empire_a"
		}
		RULER = {
			if = {
				limit = { is_memorialist_empire = no }
				if = {
					limit = { has_level < 10 }
					add_skill = 1
				}
				else = { 
					custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
				}
			}
			#Memoralist Civic Effects
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 1
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 1
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 2
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 2
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 3
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 3
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 4
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 4
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 5
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 5
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 6
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 6
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 7
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 7
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 8
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 8
			}
			else_if = {
				limit = {
					has_variable = {
						which = ruler_ancestor_level # must be directly referring to a variable
						value = 9
					}
				}
				clear_variable = ruler_ancestor_level
				set_skill = 9
			}
			else = {
				clear_variable = ruler_ancestor_level
				set_skill = 10
				custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
			}
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = scientist } 
			has_authority = auth_hive_mind
		}
		name = {
			trigger = {
				is_memorialist_empire = no
			}
			text = "EaC_civic_mechanic_events.101.option.scientist_hive_a"
		}
		name = {
			trigger = {
				is_memorialist_empire = yes
			}
			text = "EaC_civic_mechanic_events.101.option.scientist_hive_is_memorialist_empire_a"
		}
		RULER = { 
			if = {
				limit = { has_level < 10 }
				add_skill = 1
			}
			else = {
				custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
			}
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = scientist } 
			has_authority = auth_corporate
		}
		name = EaC_civic_mechanic_events.101.option.scientist_megacorp_a
		RULER = { 
			if = {
				limit = { has_level < 10 }
				add_skill = 1
			}
			else = {
				custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
			}
		}
	}
	option = {
		trigger = {
			ruler = { leader_class = scientist } 
			has_authority = auth_machine_intelligence
		}
		name = {
			trigger = {
				is_memorialist_empire = no
			}
			text = "EaC_civic_mechanic_events.101.option.scientist_machine_a"
		}
		name = {
			trigger = {
				is_memorialist_empire = yes
			}
			text = "EaC_civic_mechanic_events.101.option.scientist_machine_is_memorialist_empire_a"
		}
		RULER = { 
			if = {
				limit = { has_level < 10 }
				add_skill = 1
			}
			else = {
				custom_tooltip = EaC_civic_mechanic_events.101.tooltip.leader_is_max_level
			}
		}
	}
}